{
  "version": 3,
  "sources": ["../../../../node_modules/hono/dist/compose.js", "../../../../node_modules/hono/dist/request/constants.js", "../../../../node_modules/hono/dist/utils/body.js", "../../../../node_modules/hono/dist/utils/url.js", "../../../../node_modules/hono/dist/request.js", "../../../../node_modules/hono/dist/utils/html.js", "../../../../node_modules/hono/dist/context.js", "../../../../node_modules/hono/dist/router.js", "../../../../node_modules/hono/dist/utils/constants.js", "../../../../node_modules/hono/dist/hono-base.js", "../../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../../node_modules/hono/dist/router/smart-router/router.js", "../../../../node_modules/hono/dist/router/trie-router/node.js", "../../../../node_modules/hono/dist/router/trie-router/router.js", "../../../../node_modules/hono/dist/hono.js", "../../../../node_modules/hono/dist/middleware/cors/index.js", "../../../src/index.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-dklZXK/middleware-insertion-facade.js", "../../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-dklZXK/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\andy9\\WebstormProjects\\substracker\\backend\\.wrangler\\tmp\\dev-rmXMV9",
  "sourcesContent": ["// src/compose.ts\r\nvar compose = (middleware, onError, onNotFound) => {\r\n  return (context, next) => {\r\n    let index = -1;\r\n    return dispatch(0);\r\n    async function dispatch(i) {\r\n      if (i <= index) {\r\n        throw new Error(\"next() called multiple times\");\r\n      }\r\n      index = i;\r\n      let res;\r\n      let isError = false;\r\n      let handler;\r\n      if (middleware[i]) {\r\n        handler = middleware[i][0][0];\r\n        context.req.routeIndex = i;\r\n      } else {\r\n        handler = i === middleware.length && next || void 0;\r\n      }\r\n      if (handler) {\r\n        try {\r\n          res = await handler(context, () => dispatch(i + 1));\r\n        } catch (err) {\r\n          if (err instanceof Error && onError) {\r\n            context.error = err;\r\n            res = await onError(err, context);\r\n            isError = true;\r\n          } else {\r\n            throw err;\r\n          }\r\n        }\r\n      } else {\r\n        if (context.finalized === false && onNotFound) {\r\n          res = await onNotFound(context);\r\n        }\r\n      }\r\n      if (res && (context.finalized === false || isError)) {\r\n        context.res = res;\r\n      }\r\n      return context;\r\n    }\r\n  };\r\n};\r\nexport {\r\n  compose\r\n};\r\n", "// src/request/constants.ts\r\nvar GET_MATCH_RESULT = Symbol();\r\nexport {\r\n  GET_MATCH_RESULT\r\n};\r\n", "// src/utils/body.ts\r\nimport { HonoRequest } from \"../request.js\";\r\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\r\n  const { all = false, dot = false } = options;\r\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\r\n  const contentType = headers.get(\"Content-Type\");\r\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\r\n    return parseFormData(request, { all, dot });\r\n  }\r\n  return {};\r\n};\r\nasync function parseFormData(request, options) {\r\n  const formData = await request.formData();\r\n  if (formData) {\r\n    return convertFormDataToBodyData(formData, options);\r\n  }\r\n  return {};\r\n}\r\nfunction convertFormDataToBodyData(formData, options) {\r\n  const form = /* @__PURE__ */ Object.create(null);\r\n  formData.forEach((value, key) => {\r\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\r\n    if (!shouldParseAllValues) {\r\n      form[key] = value;\r\n    } else {\r\n      handleParsingAllValues(form, key, value);\r\n    }\r\n  });\r\n  if (options.dot) {\r\n    Object.entries(form).forEach(([key, value]) => {\r\n      const shouldParseDotValues = key.includes(\".\");\r\n      if (shouldParseDotValues) {\r\n        handleParsingNestedValues(form, key, value);\r\n        delete form[key];\r\n      }\r\n    });\r\n  }\r\n  return form;\r\n}\r\nvar handleParsingAllValues = (form, key, value) => {\r\n  if (form[key] !== void 0) {\r\n    if (Array.isArray(form[key])) {\r\n      ;\r\n      form[key].push(value);\r\n    } else {\r\n      form[key] = [form[key], value];\r\n    }\r\n  } else {\r\n    if (!key.endsWith(\"[]\")) {\r\n      form[key] = value;\r\n    } else {\r\n      form[key] = [value];\r\n    }\r\n  }\r\n};\r\nvar handleParsingNestedValues = (form, key, value) => {\r\n  let nestedForm = form;\r\n  const keys = key.split(\".\");\r\n  keys.forEach((key2, index) => {\r\n    if (index === keys.length - 1) {\r\n      nestedForm[key2] = value;\r\n    } else {\r\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\r\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\r\n      }\r\n      nestedForm = nestedForm[key2];\r\n    }\r\n  });\r\n};\r\nexport {\r\n  parseBody\r\n};\r\n", "// src/utils/url.ts\r\nvar splitPath = (path) => {\r\n  const paths = path.split(\"/\");\r\n  if (paths[0] === \"\") {\r\n    paths.shift();\r\n  }\r\n  return paths;\r\n};\r\nvar splitRoutingPath = (routePath) => {\r\n  const { groups, path } = extractGroupsFromPath(routePath);\r\n  const paths = splitPath(path);\r\n  return replaceGroupMarks(paths, groups);\r\n};\r\nvar extractGroupsFromPath = (path) => {\r\n  const groups = [];\r\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\r\n    const mark = `@${index}`;\r\n    groups.push([mark, match]);\r\n    return mark;\r\n  });\r\n  return { groups, path };\r\n};\r\nvar replaceGroupMarks = (paths, groups) => {\r\n  for (let i = groups.length - 1; i >= 0; i--) {\r\n    const [mark] = groups[i];\r\n    for (let j = paths.length - 1; j >= 0; j--) {\r\n      if (paths[j].includes(mark)) {\r\n        paths[j] = paths[j].replace(mark, groups[i][1]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return paths;\r\n};\r\nvar patternCache = {};\r\nvar getPattern = (label, next) => {\r\n  if (label === \"*\") {\r\n    return \"*\";\r\n  }\r\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\r\n  if (match) {\r\n    const cacheKey = `${label}#${next}`;\r\n    if (!patternCache[cacheKey]) {\r\n      if (match[2]) {\r\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\r\n      } else {\r\n        patternCache[cacheKey] = [label, match[1], true];\r\n      }\r\n    }\r\n    return patternCache[cacheKey];\r\n  }\r\n  return null;\r\n};\r\nvar tryDecode = (str, decoder) => {\r\n  try {\r\n    return decoder(str);\r\n  } catch {\r\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\r\n      try {\r\n        return decoder(match);\r\n      } catch {\r\n        return match;\r\n      }\r\n    });\r\n  }\r\n};\r\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\r\nvar getPath = (request) => {\r\n  const url = request.url;\r\n  const start = url.indexOf(\"/\", url.indexOf(\":\") + 4);\r\n  let i = start;\r\n  for (; i < url.length; i++) {\r\n    const charCode = url.charCodeAt(i);\r\n    if (charCode === 37) {\r\n      const queryIndex = url.indexOf(\"?\", i);\r\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\r\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\r\n    } else if (charCode === 63) {\r\n      break;\r\n    }\r\n  }\r\n  return url.slice(start, i);\r\n};\r\nvar getQueryStrings = (url) => {\r\n  const queryIndex = url.indexOf(\"?\", 8);\r\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\r\n};\r\nvar getPathNoStrict = (request) => {\r\n  const result = getPath(request);\r\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\r\n};\r\nvar mergePath = (base, sub, ...rest) => {\r\n  if (rest.length) {\r\n    sub = mergePath(sub, ...rest);\r\n  }\r\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\r\n};\r\nvar checkOptionalParameter = (path) => {\r\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\r\n    return null;\r\n  }\r\n  const segments = path.split(\"/\");\r\n  const results = [];\r\n  let basePath = \"\";\r\n  segments.forEach((segment) => {\r\n    if (segment !== \"\" && !/\\:/.test(segment)) {\r\n      basePath += \"/\" + segment;\r\n    } else if (/\\:/.test(segment)) {\r\n      if (/\\?/.test(segment)) {\r\n        if (results.length === 0 && basePath === \"\") {\r\n          results.push(\"/\");\r\n        } else {\r\n          results.push(basePath);\r\n        }\r\n        const optionalSegment = segment.replace(\"?\", \"\");\r\n        basePath += \"/\" + optionalSegment;\r\n        results.push(basePath);\r\n      } else {\r\n        basePath += \"/\" + segment;\r\n      }\r\n    }\r\n  });\r\n  return results.filter((v, i, a) => a.indexOf(v) === i);\r\n};\r\nvar _decodeURI = (value) => {\r\n  if (!/[%+]/.test(value)) {\r\n    return value;\r\n  }\r\n  if (value.indexOf(\"+\") !== -1) {\r\n    value = value.replace(/\\+/g, \" \");\r\n  }\r\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\r\n};\r\nvar _getQueryParam = (url, key, multiple) => {\r\n  let encoded;\r\n  if (!multiple && key && !/[%+]/.test(key)) {\r\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\r\n    if (keyIndex2 === -1) {\r\n      keyIndex2 = url.indexOf(`&${key}`, 8);\r\n    }\r\n    while (keyIndex2 !== -1) {\r\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\r\n      if (trailingKeyCode === 61) {\r\n        const valueIndex = keyIndex2 + key.length + 2;\r\n        const endIndex = url.indexOf(\"&\", valueIndex);\r\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\r\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\r\n        return \"\";\r\n      }\r\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\r\n    }\r\n    encoded = /[%+]/.test(url);\r\n    if (!encoded) {\r\n      return void 0;\r\n    }\r\n  }\r\n  const results = {};\r\n  encoded ??= /[%+]/.test(url);\r\n  let keyIndex = url.indexOf(\"?\", 8);\r\n  while (keyIndex !== -1) {\r\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\r\n    let valueIndex = url.indexOf(\"=\", keyIndex);\r\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\r\n      valueIndex = -1;\r\n    }\r\n    let name = url.slice(\r\n      keyIndex + 1,\r\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\r\n    );\r\n    if (encoded) {\r\n      name = _decodeURI(name);\r\n    }\r\n    keyIndex = nextKeyIndex;\r\n    if (name === \"\") {\r\n      continue;\r\n    }\r\n    let value;\r\n    if (valueIndex === -1) {\r\n      value = \"\";\r\n    } else {\r\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\r\n      if (encoded) {\r\n        value = _decodeURI(value);\r\n      }\r\n    }\r\n    if (multiple) {\r\n      if (!(results[name] && Array.isArray(results[name]))) {\r\n        results[name] = [];\r\n      }\r\n      ;\r\n      results[name].push(value);\r\n    } else {\r\n      results[name] ??= value;\r\n    }\r\n  }\r\n  return key ? results[key] : results;\r\n};\r\nvar getQueryParam = _getQueryParam;\r\nvar getQueryParams = (url, key) => {\r\n  return _getQueryParam(url, key, true);\r\n};\r\nvar decodeURIComponent_ = decodeURIComponent;\r\nexport {\r\n  checkOptionalParameter,\r\n  decodeURIComponent_,\r\n  getPath,\r\n  getPathNoStrict,\r\n  getPattern,\r\n  getQueryParam,\r\n  getQueryParams,\r\n  getQueryStrings,\r\n  mergePath,\r\n  splitPath,\r\n  splitRoutingPath,\r\n  tryDecode\r\n};\r\n", "// src/request.ts\r\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\r\nimport { parseBody } from \"./utils/body.js\";\r\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\r\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\r\nvar HonoRequest = class {\r\n  raw;\r\n  #validatedData;\r\n  #matchResult;\r\n  routeIndex = 0;\r\n  path;\r\n  bodyCache = {};\r\n  constructor(request, path = \"/\", matchResult = [[]]) {\r\n    this.raw = request;\r\n    this.path = path;\r\n    this.#matchResult = matchResult;\r\n    this.#validatedData = {};\r\n  }\r\n  param(key) {\r\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\r\n  }\r\n  #getDecodedParam(key) {\r\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\r\n    const param = this.#getParamValue(paramKey);\r\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\r\n  }\r\n  #getAllDecodedParams() {\r\n    const decoded = {};\r\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\r\n    for (const key of keys) {\r\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\r\n      if (value && typeof value === \"string\") {\r\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\r\n      }\r\n    }\r\n    return decoded;\r\n  }\r\n  #getParamValue(paramKey) {\r\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\r\n  }\r\n  query(key) {\r\n    return getQueryParam(this.url, key);\r\n  }\r\n  queries(key) {\r\n    return getQueryParams(this.url, key);\r\n  }\r\n  header(name) {\r\n    if (name) {\r\n      return this.raw.headers.get(name) ?? void 0;\r\n    }\r\n    const headerData = {};\r\n    this.raw.headers.forEach((value, key) => {\r\n      headerData[key] = value;\r\n    });\r\n    return headerData;\r\n  }\r\n  async parseBody(options) {\r\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\r\n  }\r\n  #cachedBody = (key) => {\r\n    const { bodyCache, raw } = this;\r\n    const cachedBody = bodyCache[key];\r\n    if (cachedBody) {\r\n      return cachedBody;\r\n    }\r\n    const anyCachedKey = Object.keys(bodyCache)[0];\r\n    if (anyCachedKey) {\r\n      return bodyCache[anyCachedKey].then((body) => {\r\n        if (anyCachedKey === \"json\") {\r\n          body = JSON.stringify(body);\r\n        }\r\n        return new Response(body)[key]();\r\n      });\r\n    }\r\n    return bodyCache[key] = raw[key]();\r\n  };\r\n  json() {\r\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\r\n  }\r\n  text() {\r\n    return this.#cachedBody(\"text\");\r\n  }\r\n  arrayBuffer() {\r\n    return this.#cachedBody(\"arrayBuffer\");\r\n  }\r\n  blob() {\r\n    return this.#cachedBody(\"blob\");\r\n  }\r\n  formData() {\r\n    return this.#cachedBody(\"formData\");\r\n  }\r\n  addValidatedData(target, data) {\r\n    this.#validatedData[target] = data;\r\n  }\r\n  valid(target) {\r\n    return this.#validatedData[target];\r\n  }\r\n  get url() {\r\n    return this.raw.url;\r\n  }\r\n  get method() {\r\n    return this.raw.method;\r\n  }\r\n  get [GET_MATCH_RESULT]() {\r\n    return this.#matchResult;\r\n  }\r\n  get matchedRoutes() {\r\n    return this.#matchResult[0].map(([[, route]]) => route);\r\n  }\r\n  get routePath() {\r\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\r\n  }\r\n};\r\nexport {\r\n  HonoRequest\r\n};\r\n", "// src/utils/html.ts\r\nvar HtmlEscapedCallbackPhase = {\r\n  Stringify: 1,\r\n  BeforeStream: 2,\r\n  Stream: 3\r\n};\r\nvar raw = (value, callbacks) => {\r\n  const escapedString = new String(value);\r\n  escapedString.isEscaped = true;\r\n  escapedString.callbacks = callbacks;\r\n  return escapedString;\r\n};\r\nvar escapeRe = /[&<>'\"]/;\r\nvar stringBufferToString = async (buffer, callbacks) => {\r\n  let str = \"\";\r\n  callbacks ||= [];\r\n  const resolvedBuffer = await Promise.all(buffer);\r\n  for (let i = resolvedBuffer.length - 1; ; i--) {\r\n    str += resolvedBuffer[i];\r\n    i--;\r\n    if (i < 0) {\r\n      break;\r\n    }\r\n    let r = resolvedBuffer[i];\r\n    if (typeof r === \"object\") {\r\n      callbacks.push(...r.callbacks || []);\r\n    }\r\n    const isEscaped = r.isEscaped;\r\n    r = await (typeof r === \"object\" ? r.toString() : r);\r\n    if (typeof r === \"object\") {\r\n      callbacks.push(...r.callbacks || []);\r\n    }\r\n    if (r.isEscaped ?? isEscaped) {\r\n      str += r;\r\n    } else {\r\n      const buf = [str];\r\n      escapeToBuffer(r, buf);\r\n      str = buf[0];\r\n    }\r\n  }\r\n  return raw(str, callbacks);\r\n};\r\nvar escapeToBuffer = (str, buffer) => {\r\n  const match = str.search(escapeRe);\r\n  if (match === -1) {\r\n    buffer[0] += str;\r\n    return;\r\n  }\r\n  let escape;\r\n  let index;\r\n  let lastIndex = 0;\r\n  for (index = match; index < str.length; index++) {\r\n    switch (str.charCodeAt(index)) {\r\n      case 34:\r\n        escape = \"&quot;\";\r\n        break;\r\n      case 39:\r\n        escape = \"&#39;\";\r\n        break;\r\n      case 38:\r\n        escape = \"&amp;\";\r\n        break;\r\n      case 60:\r\n        escape = \"&lt;\";\r\n        break;\r\n      case 62:\r\n        escape = \"&gt;\";\r\n        break;\r\n      default:\r\n        continue;\r\n    }\r\n    buffer[0] += str.substring(lastIndex, index) + escape;\r\n    lastIndex = index + 1;\r\n  }\r\n  buffer[0] += str.substring(lastIndex, index);\r\n};\r\nvar resolveCallbackSync = (str) => {\r\n  const callbacks = str.callbacks;\r\n  if (!callbacks?.length) {\r\n    return str;\r\n  }\r\n  const buffer = [str];\r\n  const context = {};\r\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\r\n  return buffer[0];\r\n};\r\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\r\n  if (typeof str === \"object\" && !(str instanceof String)) {\r\n    if (!(str instanceof Promise)) {\r\n      str = str.toString();\r\n    }\r\n    if (str instanceof Promise) {\r\n      str = await str;\r\n    }\r\n  }\r\n  const callbacks = str.callbacks;\r\n  if (!callbacks?.length) {\r\n    return Promise.resolve(str);\r\n  }\r\n  if (buffer) {\r\n    buffer[0] += str;\r\n  } else {\r\n    buffer = [str];\r\n  }\r\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\r\n    (res) => Promise.all(\r\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\r\n    ).then(() => buffer[0])\r\n  );\r\n  if (preserveCallbacks) {\r\n    return raw(await resStr, callbacks);\r\n  } else {\r\n    return resStr;\r\n  }\r\n};\r\nexport {\r\n  HtmlEscapedCallbackPhase,\r\n  escapeToBuffer,\r\n  raw,\r\n  resolveCallback,\r\n  resolveCallbackSync,\r\n  stringBufferToString\r\n};\r\n", "// src/context.ts\r\nimport { HonoRequest } from \"./request.js\";\r\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\r\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\r\nvar setDefaultContentType = (contentType, headers) => {\r\n  return {\r\n    \"Content-Type\": contentType,\r\n    ...headers\r\n  };\r\n};\r\nvar Context = class {\r\n  #rawRequest;\r\n  #req;\r\n  env = {};\r\n  #var;\r\n  finalized = false;\r\n  error;\r\n  #status;\r\n  #executionCtx;\r\n  #res;\r\n  #layout;\r\n  #renderer;\r\n  #notFoundHandler;\r\n  #preparedHeaders;\r\n  #matchResult;\r\n  #path;\r\n  constructor(req, options) {\r\n    this.#rawRequest = req;\r\n    if (options) {\r\n      this.#executionCtx = options.executionCtx;\r\n      this.env = options.env;\r\n      this.#notFoundHandler = options.notFoundHandler;\r\n      this.#path = options.path;\r\n      this.#matchResult = options.matchResult;\r\n    }\r\n  }\r\n  get req() {\r\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\r\n    return this.#req;\r\n  }\r\n  get event() {\r\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\r\n      return this.#executionCtx;\r\n    } else {\r\n      throw Error(\"This context has no FetchEvent\");\r\n    }\r\n  }\r\n  get executionCtx() {\r\n    if (this.#executionCtx) {\r\n      return this.#executionCtx;\r\n    } else {\r\n      throw Error(\"This context has no ExecutionContext\");\r\n    }\r\n  }\r\n  get res() {\r\n    return this.#res ||= new Response(null, {\r\n      headers: this.#preparedHeaders ??= new Headers()\r\n    });\r\n  }\r\n  set res(_res) {\r\n    if (this.#res && _res) {\r\n      _res = new Response(_res.body, _res);\r\n      for (const [k, v] of this.#res.headers.entries()) {\r\n        if (k === \"content-type\") {\r\n          continue;\r\n        }\r\n        if (k === \"set-cookie\") {\r\n          const cookies = this.#res.headers.getSetCookie();\r\n          _res.headers.delete(\"set-cookie\");\r\n          for (const cookie of cookies) {\r\n            _res.headers.append(\"set-cookie\", cookie);\r\n          }\r\n        } else {\r\n          _res.headers.set(k, v);\r\n        }\r\n      }\r\n    }\r\n    this.#res = _res;\r\n    this.finalized = true;\r\n  }\r\n  render = (...args) => {\r\n    this.#renderer ??= (content) => this.html(content);\r\n    return this.#renderer(...args);\r\n  };\r\n  setLayout = (layout) => this.#layout = layout;\r\n  getLayout = () => this.#layout;\r\n  setRenderer = (renderer) => {\r\n    this.#renderer = renderer;\r\n  };\r\n  header = (name, value, options) => {\r\n    if (this.finalized) {\r\n      this.#res = new Response(this.#res.body, this.#res);\r\n    }\r\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\r\n    if (value === void 0) {\r\n      headers.delete(name);\r\n    } else if (options?.append) {\r\n      headers.append(name, value);\r\n    } else {\r\n      headers.set(name, value);\r\n    }\r\n  };\r\n  status = (status) => {\r\n    this.#status = status;\r\n  };\r\n  set = (key, value) => {\r\n    this.#var ??= /* @__PURE__ */ new Map();\r\n    this.#var.set(key, value);\r\n  };\r\n  get = (key) => {\r\n    return this.#var ? this.#var.get(key) : void 0;\r\n  };\r\n  get var() {\r\n    if (!this.#var) {\r\n      return {};\r\n    }\r\n    return Object.fromEntries(this.#var);\r\n  }\r\n  #newResponse(data, arg, headers) {\r\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\r\n    if (typeof arg === \"object\" && \"headers\" in arg) {\r\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\r\n      for (const [key, value] of argHeaders) {\r\n        if (key.toLowerCase() === \"set-cookie\") {\r\n          responseHeaders.append(key, value);\r\n        } else {\r\n          responseHeaders.set(key, value);\r\n        }\r\n      }\r\n    }\r\n    if (headers) {\r\n      for (const [k, v] of Object.entries(headers)) {\r\n        if (typeof v === \"string\") {\r\n          responseHeaders.set(k, v);\r\n        } else {\r\n          responseHeaders.delete(k);\r\n          for (const v2 of v) {\r\n            responseHeaders.append(k, v2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\r\n    return new Response(data, { status, headers: responseHeaders });\r\n  }\r\n  newResponse = (...args) => this.#newResponse(...args);\r\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\r\n  text = (text, arg, headers) => {\r\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\r\n      text,\r\n      arg,\r\n      setDefaultContentType(TEXT_PLAIN, headers)\r\n    );\r\n  };\r\n  json = (object, arg, headers) => {\r\n    return this.#newResponse(\r\n      JSON.stringify(object),\r\n      arg,\r\n      setDefaultContentType(\"application/json\", headers)\r\n    );\r\n  };\r\n  html = (html, arg, headers) => {\r\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\r\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\r\n  };\r\n  redirect = (location, status) => {\r\n    const locationString = String(location);\r\n    this.header(\r\n      \"Location\",\r\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\r\n    );\r\n    return this.newResponse(null, status ?? 302);\r\n  };\r\n  notFound = () => {\r\n    this.#notFoundHandler ??= () => new Response();\r\n    return this.#notFoundHandler(this);\r\n  };\r\n};\r\nexport {\r\n  Context,\r\n  TEXT_PLAIN\r\n};\r\n", "// src/router.ts\r\nvar METHOD_NAME_ALL = \"ALL\";\r\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\r\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\r\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\r\nvar UnsupportedPathError = class extends Error {\r\n};\r\nexport {\r\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\r\n  METHODS,\r\n  METHOD_NAME_ALL,\r\n  METHOD_NAME_ALL_LOWERCASE,\r\n  UnsupportedPathError\r\n};\r\n", "// src/utils/constants.ts\r\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\r\nexport {\r\n  COMPOSED_HANDLER\r\n};\r\n", "// src/hono-base.ts\r\nimport { compose } from \"./compose.js\";\r\nimport { Context } from \"./context.js\";\r\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\r\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\r\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\r\nvar notFoundHandler = (c) => {\r\n  return c.text(\"404 Not Found\", 404);\r\n};\r\nvar errorHandler = (err, c) => {\r\n  if (\"getResponse\" in err) {\r\n    const res = err.getResponse();\r\n    return c.newResponse(res.body, res);\r\n  }\r\n  console.error(err);\r\n  return c.text(\"Internal Server Error\", 500);\r\n};\r\nvar Hono = class {\r\n  get;\r\n  post;\r\n  put;\r\n  delete;\r\n  options;\r\n  patch;\r\n  all;\r\n  on;\r\n  use;\r\n  router;\r\n  getPath;\r\n  _basePath = \"/\";\r\n  #path = \"/\";\r\n  routes = [];\r\n  constructor(options = {}) {\r\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\r\n    allMethods.forEach((method) => {\r\n      this[method] = (args1, ...args) => {\r\n        if (typeof args1 === \"string\") {\r\n          this.#path = args1;\r\n        } else {\r\n          this.#addRoute(method, this.#path, args1);\r\n        }\r\n        args.forEach((handler) => {\r\n          this.#addRoute(method, this.#path, handler);\r\n        });\r\n        return this;\r\n      };\r\n    });\r\n    this.on = (method, path, ...handlers) => {\r\n      for (const p of [path].flat()) {\r\n        this.#path = p;\r\n        for (const m of [method].flat()) {\r\n          handlers.map((handler) => {\r\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\r\n          });\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n    this.use = (arg1, ...handlers) => {\r\n      if (typeof arg1 === \"string\") {\r\n        this.#path = arg1;\r\n      } else {\r\n        this.#path = \"*\";\r\n        handlers.unshift(arg1);\r\n      }\r\n      handlers.forEach((handler) => {\r\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\r\n      });\r\n      return this;\r\n    };\r\n    const { strict, ...optionsWithoutStrict } = options;\r\n    Object.assign(this, optionsWithoutStrict);\r\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\r\n  }\r\n  #clone() {\r\n    const clone = new Hono({\r\n      router: this.router,\r\n      getPath: this.getPath\r\n    });\r\n    clone.errorHandler = this.errorHandler;\r\n    clone.#notFoundHandler = this.#notFoundHandler;\r\n    clone.routes = this.routes;\r\n    return clone;\r\n  }\r\n  #notFoundHandler = notFoundHandler;\r\n  errorHandler = errorHandler;\r\n  route(path, app) {\r\n    const subApp = this.basePath(path);\r\n    app.routes.map((r) => {\r\n      let handler;\r\n      if (app.errorHandler === errorHandler) {\r\n        handler = r.handler;\r\n      } else {\r\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\r\n        handler[COMPOSED_HANDLER] = r.handler;\r\n      }\r\n      subApp.#addRoute(r.method, r.path, handler);\r\n    });\r\n    return this;\r\n  }\r\n  basePath(path) {\r\n    const subApp = this.#clone();\r\n    subApp._basePath = mergePath(this._basePath, path);\r\n    return subApp;\r\n  }\r\n  onError = (handler) => {\r\n    this.errorHandler = handler;\r\n    return this;\r\n  };\r\n  notFound = (handler) => {\r\n    this.#notFoundHandler = handler;\r\n    return this;\r\n  };\r\n  mount(path, applicationHandler, options) {\r\n    let replaceRequest;\r\n    let optionHandler;\r\n    if (options) {\r\n      if (typeof options === \"function\") {\r\n        optionHandler = options;\r\n      } else {\r\n        optionHandler = options.optionHandler;\r\n        if (options.replaceRequest === false) {\r\n          replaceRequest = (request) => request;\r\n        } else {\r\n          replaceRequest = options.replaceRequest;\r\n        }\r\n      }\r\n    }\r\n    const getOptions = optionHandler ? (c) => {\r\n      const options2 = optionHandler(c);\r\n      return Array.isArray(options2) ? options2 : [options2];\r\n    } : (c) => {\r\n      let executionContext = void 0;\r\n      try {\r\n        executionContext = c.executionCtx;\r\n      } catch {\r\n      }\r\n      return [c.env, executionContext];\r\n    };\r\n    replaceRequest ||= (() => {\r\n      const mergedPath = mergePath(this._basePath, path);\r\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\r\n      return (request) => {\r\n        const url = new URL(request.url);\r\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\r\n        return new Request(url, request);\r\n      };\r\n    })();\r\n    const handler = async (c, next) => {\r\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\r\n      if (res) {\r\n        return res;\r\n      }\r\n      await next();\r\n    };\r\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\r\n    return this;\r\n  }\r\n  #addRoute(method, path, handler) {\r\n    method = method.toUpperCase();\r\n    path = mergePath(this._basePath, path);\r\n    const r = { basePath: this._basePath, path, method, handler };\r\n    this.router.add(method, path, [handler, r]);\r\n    this.routes.push(r);\r\n  }\r\n  #handleError(err, c) {\r\n    if (err instanceof Error) {\r\n      return this.errorHandler(err, c);\r\n    }\r\n    throw err;\r\n  }\r\n  #dispatch(request, executionCtx, env, method) {\r\n    if (method === \"HEAD\") {\r\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\r\n    }\r\n    const path = this.getPath(request, { env });\r\n    const matchResult = this.router.match(method, path);\r\n    const c = new Context(request, {\r\n      path,\r\n      matchResult,\r\n      env,\r\n      executionCtx,\r\n      notFoundHandler: this.#notFoundHandler\r\n    });\r\n    if (matchResult[0].length === 1) {\r\n      let res;\r\n      try {\r\n        res = matchResult[0][0][0][0](c, async () => {\r\n          c.res = await this.#notFoundHandler(c);\r\n        });\r\n      } catch (err) {\r\n        return this.#handleError(err, c);\r\n      }\r\n      return res instanceof Promise ? res.then(\r\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\r\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\r\n    }\r\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\r\n    return (async () => {\r\n      try {\r\n        const context = await composed(c);\r\n        if (!context.finalized) {\r\n          throw new Error(\r\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\r\n          );\r\n        }\r\n        return context.res;\r\n      } catch (err) {\r\n        return this.#handleError(err, c);\r\n      }\r\n    })();\r\n  }\r\n  fetch = (request, ...rest) => {\r\n    return this.#dispatch(request, rest[1], rest[0], request.method);\r\n  };\r\n  request = (input, requestInit, Env, executionCtx) => {\r\n    if (input instanceof Request) {\r\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\r\n    }\r\n    input = input.toString();\r\n    return this.fetch(\r\n      new Request(\r\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\r\n        requestInit\r\n      ),\r\n      Env,\r\n      executionCtx\r\n    );\r\n  };\r\n  fire = () => {\r\n    addEventListener(\"fetch\", (event) => {\r\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\r\n    });\r\n  };\r\n};\r\nexport {\r\n  Hono as HonoBase\r\n};\r\n", "// src/router/reg-exp-router/node.ts\r\nvar LABEL_REG_EXP_STR = \"[^/]+\";\r\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\r\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\r\nvar PATH_ERROR = Symbol();\r\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\r\nfunction compareKey(a, b) {\r\n  if (a.length === 1) {\r\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\r\n  }\r\n  if (b.length === 1) {\r\n    return 1;\r\n  }\r\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\r\n    return 1;\r\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\r\n    return -1;\r\n  }\r\n  if (a === LABEL_REG_EXP_STR) {\r\n    return 1;\r\n  } else if (b === LABEL_REG_EXP_STR) {\r\n    return -1;\r\n  }\r\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\r\n}\r\nvar Node = class {\r\n  #index;\r\n  #varIndex;\r\n  #children = /* @__PURE__ */ Object.create(null);\r\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\r\n    if (tokens.length === 0) {\r\n      if (this.#index !== void 0) {\r\n        throw PATH_ERROR;\r\n      }\r\n      if (pathErrorCheckOnly) {\r\n        return;\r\n      }\r\n      this.#index = index;\r\n      return;\r\n    }\r\n    const [token, ...restTokens] = tokens;\r\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\r\n    let node;\r\n    if (pattern) {\r\n      const name = pattern[1];\r\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\r\n      if (name && pattern[2]) {\r\n        if (regexpStr === \".*\") {\r\n          throw PATH_ERROR;\r\n        }\r\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\r\n        if (/\\((?!\\?:)/.test(regexpStr)) {\r\n          throw PATH_ERROR;\r\n        }\r\n      }\r\n      node = this.#children[regexpStr];\r\n      if (!node) {\r\n        if (Object.keys(this.#children).some(\r\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\r\n        )) {\r\n          throw PATH_ERROR;\r\n        }\r\n        if (pathErrorCheckOnly) {\r\n          return;\r\n        }\r\n        node = this.#children[regexpStr] = new Node();\r\n        if (name !== \"\") {\r\n          node.#varIndex = context.varIndex++;\r\n        }\r\n      }\r\n      if (!pathErrorCheckOnly && name !== \"\") {\r\n        paramMap.push([name, node.#varIndex]);\r\n      }\r\n    } else {\r\n      node = this.#children[token];\r\n      if (!node) {\r\n        if (Object.keys(this.#children).some(\r\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\r\n        )) {\r\n          throw PATH_ERROR;\r\n        }\r\n        if (pathErrorCheckOnly) {\r\n          return;\r\n        }\r\n        node = this.#children[token] = new Node();\r\n      }\r\n    }\r\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\r\n  }\r\n  buildRegExpStr() {\r\n    const childKeys = Object.keys(this.#children).sort(compareKey);\r\n    const strList = childKeys.map((k) => {\r\n      const c = this.#children[k];\r\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\r\n    });\r\n    if (typeof this.#index === \"number\") {\r\n      strList.unshift(`#${this.#index}`);\r\n    }\r\n    if (strList.length === 0) {\r\n      return \"\";\r\n    }\r\n    if (strList.length === 1) {\r\n      return strList[0];\r\n    }\r\n    return \"(?:\" + strList.join(\"|\") + \")\";\r\n  }\r\n};\r\nexport {\r\n  Node,\r\n  PATH_ERROR\r\n};\r\n", "// src/router/reg-exp-router/trie.ts\r\nimport { Node } from \"./node.js\";\r\nvar Trie = class {\r\n  #context = { varIndex: 0 };\r\n  #root = new Node();\r\n  insert(path, index, pathErrorCheckOnly) {\r\n    const paramAssoc = [];\r\n    const groups = [];\r\n    for (let i = 0; ; ) {\r\n      let replaced = false;\r\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\r\n        const mark = `@\\\\${i}`;\r\n        groups[i] = [mark, m];\r\n        i++;\r\n        replaced = true;\r\n        return mark;\r\n      });\r\n      if (!replaced) {\r\n        break;\r\n      }\r\n    }\r\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\r\n    for (let i = groups.length - 1; i >= 0; i--) {\r\n      const [mark] = groups[i];\r\n      for (let j = tokens.length - 1; j >= 0; j--) {\r\n        if (tokens[j].indexOf(mark) !== -1) {\r\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\r\n    return paramAssoc;\r\n  }\r\n  buildRegExp() {\r\n    let regexp = this.#root.buildRegExpStr();\r\n    if (regexp === \"\") {\r\n      return [/^$/, [], []];\r\n    }\r\n    let captureIndex = 0;\r\n    const indexReplacementMap = [];\r\n    const paramReplacementMap = [];\r\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\r\n      if (handlerIndex !== void 0) {\r\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\r\n        return \"$()\";\r\n      }\r\n      if (paramIndex !== void 0) {\r\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\r\n        return \"\";\r\n      }\r\n      return \"\";\r\n    });\r\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\r\n  }\r\n};\r\nexport {\r\n  Trie\r\n};\r\n", "// src/router/reg-exp-router/router.ts\r\nimport {\r\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\r\n  METHOD_NAME_ALL,\r\n  UnsupportedPathError\r\n} from \"../../router.js\";\r\nimport { checkOptionalParameter } from \"../../utils/url.js\";\r\nimport { PATH_ERROR } from \"./node.js\";\r\nimport { Trie } from \"./trie.js\";\r\nvar emptyParam = [];\r\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\r\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\r\nfunction buildWildcardRegExp(path) {\r\n  return wildcardRegExpCache[path] ??= new RegExp(\r\n    path === \"*\" ? \"\" : `^${path.replace(\r\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\r\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\r\n    )}$`\r\n  );\r\n}\r\nfunction clearWildcardRegExpCache() {\r\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\r\n}\r\nfunction buildMatcherFromPreprocessedRoutes(routes) {\r\n  const trie = new Trie();\r\n  const handlerData = [];\r\n  if (routes.length === 0) {\r\n    return nullMatcher;\r\n  }\r\n  const routesWithStaticPathFlag = routes.map(\r\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\r\n  ).sort(\r\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\r\n  );\r\n  const staticMap = /* @__PURE__ */ Object.create(null);\r\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\r\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\r\n    if (pathErrorCheckOnly) {\r\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\r\n    } else {\r\n      j++;\r\n    }\r\n    let paramAssoc;\r\n    try {\r\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\r\n    } catch (e) {\r\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\r\n    }\r\n    if (pathErrorCheckOnly) {\r\n      continue;\r\n    }\r\n    handlerData[j] = handlers.map(([h, paramCount]) => {\r\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\r\n      paramCount -= 1;\r\n      for (; paramCount >= 0; paramCount--) {\r\n        const [key, value] = paramAssoc[paramCount];\r\n        paramIndexMap[key] = value;\r\n      }\r\n      return [h, paramIndexMap];\r\n    });\r\n  }\r\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\r\n  for (let i = 0, len = handlerData.length; i < len; i++) {\r\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\r\n      const map = handlerData[i][j]?.[1];\r\n      if (!map) {\r\n        continue;\r\n      }\r\n      const keys = Object.keys(map);\r\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\r\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\r\n      }\r\n    }\r\n  }\r\n  const handlerMap = [];\r\n  for (const i in indexReplacementMap) {\r\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\r\n  }\r\n  return [regexp, handlerMap, staticMap];\r\n}\r\nfunction findMiddleware(middleware, path) {\r\n  if (!middleware) {\r\n    return void 0;\r\n  }\r\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\r\n    if (buildWildcardRegExp(k).test(path)) {\r\n      return [...middleware[k]];\r\n    }\r\n  }\r\n  return void 0;\r\n}\r\nvar RegExpRouter = class {\r\n  name = \"RegExpRouter\";\r\n  #middleware;\r\n  #routes;\r\n  constructor() {\r\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\r\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\r\n  }\r\n  add(method, path, handler) {\r\n    const middleware = this.#middleware;\r\n    const routes = this.#routes;\r\n    if (!middleware || !routes) {\r\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\r\n    }\r\n    if (!middleware[method]) {\r\n      ;\r\n      [middleware, routes].forEach((handlerMap) => {\r\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\r\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\r\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\r\n        });\r\n      });\r\n    }\r\n    if (path === \"/*\") {\r\n      path = \"*\";\r\n    }\r\n    const paramCount = (path.match(/\\/:/g) || []).length;\r\n    if (/\\*$/.test(path)) {\r\n      const re = buildWildcardRegExp(path);\r\n      if (method === METHOD_NAME_ALL) {\r\n        Object.keys(middleware).forEach((m) => {\r\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\r\n        });\r\n      } else {\r\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\r\n      }\r\n      Object.keys(middleware).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          Object.keys(middleware[m]).forEach((p) => {\r\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\r\n          });\r\n        }\r\n      });\r\n      Object.keys(routes).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          Object.keys(routes[m]).forEach(\r\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\r\n          );\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    const paths = checkOptionalParameter(path) || [path];\r\n    for (let i = 0, len = paths.length; i < len; i++) {\r\n      const path2 = paths[i];\r\n      Object.keys(routes).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          routes[m][path2] ||= [\r\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\r\n          ];\r\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  match(method, path) {\r\n    clearWildcardRegExpCache();\r\n    const matchers = this.#buildAllMatchers();\r\n    this.match = (method2, path2) => {\r\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\r\n      const staticMatch = matcher[2][path2];\r\n      if (staticMatch) {\r\n        return staticMatch;\r\n      }\r\n      const match = path2.match(matcher[0]);\r\n      if (!match) {\r\n        return [[], emptyParam];\r\n      }\r\n      const index = match.indexOf(\"\", 1);\r\n      return [matcher[1][index], match];\r\n    };\r\n    return this.match(method, path);\r\n  }\r\n  #buildAllMatchers() {\r\n    const matchers = /* @__PURE__ */ Object.create(null);\r\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\r\n      matchers[method] ||= this.#buildMatcher(method);\r\n    });\r\n    this.#middleware = this.#routes = void 0;\r\n    return matchers;\r\n  }\r\n  #buildMatcher(method) {\r\n    const routes = [];\r\n    let hasOwnRoute = method === METHOD_NAME_ALL;\r\n    [this.#middleware, this.#routes].forEach((r) => {\r\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\r\n      if (ownRoute.length !== 0) {\r\n        hasOwnRoute ||= true;\r\n        routes.push(...ownRoute);\r\n      } else if (method !== METHOD_NAME_ALL) {\r\n        routes.push(\r\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\r\n        );\r\n      }\r\n    });\r\n    if (!hasOwnRoute) {\r\n      return null;\r\n    } else {\r\n      return buildMatcherFromPreprocessedRoutes(routes);\r\n    }\r\n  }\r\n};\r\nexport {\r\n  RegExpRouter\r\n};\r\n", "// src/router/smart-router/router.ts\r\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\r\nvar SmartRouter = class {\r\n  name = \"SmartRouter\";\r\n  #routers = [];\r\n  #routes = [];\r\n  constructor(init) {\r\n    this.#routers = init.routers;\r\n  }\r\n  add(method, path, handler) {\r\n    if (!this.#routes) {\r\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\r\n    }\r\n    this.#routes.push([method, path, handler]);\r\n  }\r\n  match(method, path) {\r\n    if (!this.#routes) {\r\n      throw new Error(\"Fatal error\");\r\n    }\r\n    const routers = this.#routers;\r\n    const routes = this.#routes;\r\n    const len = routers.length;\r\n    let i = 0;\r\n    let res;\r\n    for (; i < len; i++) {\r\n      const router = routers[i];\r\n      try {\r\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\r\n          router.add(...routes[i2]);\r\n        }\r\n        res = router.match(method, path);\r\n      } catch (e) {\r\n        if (e instanceof UnsupportedPathError) {\r\n          continue;\r\n        }\r\n        throw e;\r\n      }\r\n      this.match = router.match.bind(router);\r\n      this.#routers = [router];\r\n      this.#routes = void 0;\r\n      break;\r\n    }\r\n    if (i === len) {\r\n      throw new Error(\"Fatal error\");\r\n    }\r\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\r\n    return res;\r\n  }\r\n  get activeRouter() {\r\n    if (this.#routes || this.#routers.length !== 1) {\r\n      throw new Error(\"No active router has been determined yet.\");\r\n    }\r\n    return this.#routers[0];\r\n  }\r\n};\r\nexport {\r\n  SmartRouter\r\n};\r\n", "// src/router/trie-router/node.ts\r\nimport { METHOD_NAME_ALL } from \"../../router.js\";\r\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\r\nvar emptyParams = /* @__PURE__ */ Object.create(null);\r\nvar Node = class {\r\n  #methods;\r\n  #children;\r\n  #patterns;\r\n  #order = 0;\r\n  #params = emptyParams;\r\n  constructor(method, handler, children) {\r\n    this.#children = children || /* @__PURE__ */ Object.create(null);\r\n    this.#methods = [];\r\n    if (method && handler) {\r\n      const m = /* @__PURE__ */ Object.create(null);\r\n      m[method] = { handler, possibleKeys: [], score: 0 };\r\n      this.#methods = [m];\r\n    }\r\n    this.#patterns = [];\r\n  }\r\n  insert(method, path, handler) {\r\n    this.#order = ++this.#order;\r\n    let curNode = this;\r\n    const parts = splitRoutingPath(path);\r\n    const possibleKeys = [];\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n      const p = parts[i];\r\n      const nextP = parts[i + 1];\r\n      const pattern = getPattern(p, nextP);\r\n      const key = Array.isArray(pattern) ? pattern[0] : p;\r\n      if (key in curNode.#children) {\r\n        curNode = curNode.#children[key];\r\n        if (pattern) {\r\n          possibleKeys.push(pattern[1]);\r\n        }\r\n        continue;\r\n      }\r\n      curNode.#children[key] = new Node();\r\n      if (pattern) {\r\n        curNode.#patterns.push(pattern);\r\n        possibleKeys.push(pattern[1]);\r\n      }\r\n      curNode = curNode.#children[key];\r\n    }\r\n    curNode.#methods.push({\r\n      [method]: {\r\n        handler,\r\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\r\n        score: this.#order\r\n      }\r\n    });\r\n    return curNode;\r\n  }\r\n  #getHandlerSets(node, method, nodeParams, params) {\r\n    const handlerSets = [];\r\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\r\n      const m = node.#methods[i];\r\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\r\n      const processedSet = {};\r\n      if (handlerSet !== void 0) {\r\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\r\n        handlerSets.push(handlerSet);\r\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\r\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\r\n            const key = handlerSet.possibleKeys[i2];\r\n            const processed = processedSet[handlerSet.score];\r\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\r\n            processedSet[handlerSet.score] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return handlerSets;\r\n  }\r\n  search(method, path) {\r\n    const handlerSets = [];\r\n    this.#params = emptyParams;\r\n    const curNode = this;\r\n    let curNodes = [curNode];\r\n    const parts = splitPath(path);\r\n    const curNodesQueue = [];\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n      const part = parts[i];\r\n      const isLast = i === len - 1;\r\n      const tempNodes = [];\r\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\r\n        const node = curNodes[j];\r\n        const nextNode = node.#children[part];\r\n        if (nextNode) {\r\n          nextNode.#params = node.#params;\r\n          if (isLast) {\r\n            if (nextNode.#children[\"*\"]) {\r\n              handlerSets.push(\r\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\r\n              );\r\n            }\r\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\r\n          } else {\r\n            tempNodes.push(nextNode);\r\n          }\r\n        }\r\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\r\n          const pattern = node.#patterns[k];\r\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\r\n          if (pattern === \"*\") {\r\n            const astNode = node.#children[\"*\"];\r\n            if (astNode) {\r\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\r\n              astNode.#params = params;\r\n              tempNodes.push(astNode);\r\n            }\r\n            continue;\r\n          }\r\n          const [key, name, matcher] = pattern;\r\n          if (!part && !(matcher instanceof RegExp)) {\r\n            continue;\r\n          }\r\n          const child = node.#children[key];\r\n          const restPathString = parts.slice(i).join(\"/\");\r\n          if (matcher instanceof RegExp) {\r\n            const m = matcher.exec(restPathString);\r\n            if (m) {\r\n              params[name] = m[0];\r\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\r\n              if (Object.keys(child.#children).length) {\r\n                child.#params = params;\r\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\r\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\r\n                targetCurNodes.push(child);\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          if (matcher === true || matcher.test(part)) {\r\n            params[name] = part;\r\n            if (isLast) {\r\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\r\n              if (child.#children[\"*\"]) {\r\n                handlerSets.push(\r\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\r\n                );\r\n              }\r\n            } else {\r\n              child.#params = params;\r\n              tempNodes.push(child);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\r\n    }\r\n    if (handlerSets.length > 1) {\r\n      handlerSets.sort((a, b) => {\r\n        return a.score - b.score;\r\n      });\r\n    }\r\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\r\n  }\r\n};\r\nexport {\r\n  Node\r\n};\r\n", "// src/router/trie-router/router.ts\r\nimport { checkOptionalParameter } from \"../../utils/url.js\";\r\nimport { Node } from \"./node.js\";\r\nvar TrieRouter = class {\r\n  name = \"TrieRouter\";\r\n  #node;\r\n  constructor() {\r\n    this.#node = new Node();\r\n  }\r\n  add(method, path, handler) {\r\n    const results = checkOptionalParameter(path);\r\n    if (results) {\r\n      for (let i = 0, len = results.length; i < len; i++) {\r\n        this.#node.insert(method, results[i], handler);\r\n      }\r\n      return;\r\n    }\r\n    this.#node.insert(method, path, handler);\r\n  }\r\n  match(method, path) {\r\n    return this.#node.search(method, path);\r\n  }\r\n};\r\nexport {\r\n  TrieRouter\r\n};\r\n", "// src/hono.ts\r\nimport { HonoBase } from \"./hono-base.js\";\r\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\r\nimport { SmartRouter } from \"./router/smart-router/index.js\";\r\nimport { TrieRouter } from \"./router/trie-router/index.js\";\r\nvar Hono = class extends HonoBase {\r\n  constructor(options = {}) {\r\n    super(options);\r\n    this.router = options.router ?? new SmartRouter({\r\n      routers: [new RegExpRouter(), new TrieRouter()]\r\n    });\r\n  }\r\n};\r\nexport {\r\n  Hono\r\n};\r\n", "// src/middleware/cors/index.ts\r\nvar cors = (options) => {\r\n  const defaults = {\r\n    origin: \"*\",\r\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\r\n    allowHeaders: [],\r\n    exposeHeaders: []\r\n  };\r\n  const opts = {\r\n    ...defaults,\r\n    ...options\r\n  };\r\n  const findAllowOrigin = ((optsOrigin) => {\r\n    if (typeof optsOrigin === \"string\") {\r\n      if (optsOrigin === \"*\") {\r\n        return () => optsOrigin;\r\n      } else {\r\n        return (origin) => optsOrigin === origin ? origin : null;\r\n      }\r\n    } else if (typeof optsOrigin === \"function\") {\r\n      return optsOrigin;\r\n    } else {\r\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\r\n    }\r\n  })(opts.origin);\r\n  const findAllowMethods = ((optsAllowMethods) => {\r\n    if (typeof optsAllowMethods === \"function\") {\r\n      return optsAllowMethods;\r\n    } else if (Array.isArray(optsAllowMethods)) {\r\n      return () => optsAllowMethods;\r\n    } else {\r\n      return () => [];\r\n    }\r\n  })(opts.allowMethods);\r\n  return async function cors2(c, next) {\r\n    function set(key, value) {\r\n      c.res.headers.set(key, value);\r\n    }\r\n    const allowOrigin = await findAllowOrigin(c.req.header(\"origin\") || \"\", c);\r\n    if (allowOrigin) {\r\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\r\n    }\r\n    if (opts.origin !== \"*\") {\r\n      const existingVary = c.req.header(\"Vary\");\r\n      if (existingVary) {\r\n        set(\"Vary\", existingVary);\r\n      } else {\r\n        set(\"Vary\", \"Origin\");\r\n      }\r\n    }\r\n    if (opts.credentials) {\r\n      set(\"Access-Control-Allow-Credentials\", \"true\");\r\n    }\r\n    if (opts.exposeHeaders?.length) {\r\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\r\n    }\r\n    if (c.req.method === \"OPTIONS\") {\r\n      if (opts.maxAge != null) {\r\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\r\n      }\r\n      const allowMethods = await findAllowMethods(c.req.header(\"origin\") || \"\", c);\r\n      if (allowMethods.length) {\r\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\r\n      }\r\n      let headers = opts.allowHeaders;\r\n      if (!headers?.length) {\r\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\r\n        if (requestHeaders) {\r\n          headers = requestHeaders.split(/\\s*,\\s*/);\r\n        }\r\n      }\r\n      if (headers?.length) {\r\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\r\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\r\n      }\r\n      c.res.headers.delete(\"Content-Length\");\r\n      c.res.headers.delete(\"Content-Type\");\r\n      return new Response(null, {\r\n        headers: c.res.headers,\r\n        status: 204,\r\n        statusText: \"No Content\"\r\n      });\r\n    }\r\n    await next();\r\n  };\r\n};\r\nexport {\r\n  cors\r\n};\r\n", "import { Hono } from 'hono'\r\nimport { cors } from 'hono/cors'\r\nimport type { Subscription, CreateSubscriptionRequest, UpdateSubscriptionRequest, ApiResponse } from './types'\r\n\r\n// \u5C0E\u5165 Cloudflare Workers \u985E\u578B\r\n/// <reference types=\"@cloudflare/workers-types\" />\r\n\r\ntype Bindings = {\r\n    DB: D1Database\r\n}\r\n\r\nconst app = new Hono<{ Bindings: Bindings }>()\r\n\r\n// \u5B89\u5168\u6A19\u982D\u4E2D\u9593\u4EF6\r\napp.use('*', async (c, next) => {\r\n    // \u6DFB\u52A0\u5B89\u5168\u6A19\u982D\r\n    c.header('X-Content-Type-Options', 'nosniff')\r\n    c.header('Content-Security-Policy', \"frame-ancestors 'none'\")\r\n    c.header('Referrer-Policy', 'strict-origin-when-cross-origin')\r\n    c.header('Permissions-Policy', 'geolocation=(), microphone=(), camera=()')\r\n\r\n    // \u8A2D\u7F6E\u6B63\u78BA\u7684 Content-Type\r\n    c.header('Content-Type', 'application/json; charset=utf-8')\r\n\r\n    // \u6DFB\u52A0\u5FEB\u53D6\u63A7\u5236\u6A19\u982D\r\n    if (c.req.method === 'GET') {\r\n        c.header('Cache-Control', 'public, max-age=300') // 5\u5206\u9418\u5FEB\u53D6\r\n    } else {\r\n        c.header('Cache-Control', 'no-cache, no-store, must-revalidate')\r\n    }\r\n\r\n    await next()\r\n})\r\n\r\n// CORS \u8A2D\u5B9A\r\napp.use('*', cors({\r\n    origin: [\r\n        'http://localhost:3000',\r\n        'http://localhost:3001',\r\n        'http://localhost:3002',\r\n        'http://localhost:5173',\r\n        'https://ru-web.idv.tw/'\r\n    ],\r\n    allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n    allowHeaders: ['Content-Type', 'Authorization'],\r\n    credentials: true,\r\n}))\r\n\r\n// \u932F\u8AA4\u8655\u7406\u4E2D\u9593\u4EF6\r\napp.onError((err, c) => {\r\n    console.error('API Error:', err)\r\n    return c.json({\r\n        success: false,\r\n        error: err.message || 'Internal Server Error',\r\n        message: '\u670D\u52D9\u5668\u5167\u90E8\u932F\u8AA4'\r\n    } as ApiResponse, 500)\r\n})\r\n\r\n// \u6578\u64DA\u9A57\u8B49\u51FD\u6578\r\nfunction validateSubscription(data: any): string[] {\r\n    const errors: string[] = []\r\n\r\n    // \u6DFB\u52A0\u8ABF\u8A66\u65E5\u8A8C\r\n    console.log('=== Backend Validation Debug ===')\r\n    console.log('Received data:', JSON.stringify(data, null, 2))\r\n    console.log('Date fields check:')\r\n    console.log('  next_billing_date:', data.next_billing_date)\r\n    console.log('  nextBilling:', data.nextBilling)\r\n    console.log('  next_billing:', data.next_billing)\r\n    console.log('  renewalDate:', data.renewalDate)\r\n    console.log('  renewal_date:', data.renewal_date)\r\n    console.log('===============================')\r\n\r\n    if (!data.name || typeof data.name !== 'string' || data.name.trim().length === 0) {\r\n        errors.push('\u8A02\u95B1\u540D\u7A31\u662F\u5FC5\u586B\u9805')\r\n    }\r\n\r\n    // \u6AA2\u67E5\u591A\u7A2E\u53EF\u80FD\u7684\u65E5\u671F\u5B57\u6BB5\u540D\u7A31\uFF0C\u4E26\u63A5\u53D7\u4EFB\u4F55\u5B58\u5728\u7684\u65E5\u671F\u5B57\u6BB5\r\n    const nextBillingDate = data.next_billing_date || data.nextBilling || data.next_billing || data.renewalDate || data.renewal_date ||\r\n        data.nextBillingDate || data.next_billing_Date || data.NextBilling\r\n\r\n    console.log('Selected nextBillingDate:', nextBillingDate)\r\n    console.log('Type of nextBillingDate:', typeof nextBillingDate)\r\n\r\n    // \u5982\u679C\u6C92\u6709\u627E\u5230\u4EFB\u4F55\u65E5\u671F\u5B57\u6BB5\uFF0C\u8DF3\u904E\u9A57\u8B49\uFF08\u8B93\u6578\u64DA\u5EAB\u8655\u7406\uFF09\r\n    if (nextBillingDate && typeof nextBillingDate === 'string') {\r\n        // \u8655\u7406 ISO \u65E5\u671F\u683C\u5F0F (YYYY-MM-DDTHH:mm:ss.sssZ) \u6216\u7C21\u55AE\u65E5\u671F\u683C\u5F0F (YYYY-MM-DD)\r\n        let dateToValidate = nextBillingDate\r\n        if (nextBillingDate.includes('T')) {\r\n            // \u5982\u679C\u662F ISO \u683C\u5F0F\uFF0C\u63D0\u53D6\u65E5\u671F\u90E8\u5206\r\n            dateToValidate = nextBillingDate.split('T')[0]\r\n        }\r\n\r\n        // \u9A57\u8B49\u65E5\u671F\u683C\u5F0F YYYY-MM-DD\r\n        const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/\r\n        if (!dateRegex.test(dateToValidate)) {\r\n            errors.push('\u7E8C\u7D04\u65E5\u671F\u683C\u5F0F\u5FC5\u9808\u662F YYYY-MM-DD')\r\n        } else {\r\n            const date = new Date(dateToValidate)\r\n            if (isNaN(date.getTime())) {\r\n                errors.push('\u7E8C\u7D04\u65E5\u671F\u683C\u5F0F\u7121\u6548')\r\n            }\r\n        }\r\n    }\r\n\r\n    if (data.price === undefined || data.price === null || typeof data.price !== 'number' || data.price < 0) {\r\n        errors.push('\u50F9\u683C\u5FC5\u9808\u662F\u975E\u8CA0\u6578')\r\n    }\r\n\r\n    if (!data.currency || typeof data.currency !== 'string') {\r\n        errors.push('\u8CA8\u5E63\u4EE3\u78BC\u662F\u5FC5\u586B\u9805')\r\n    }\r\n\r\n    // \u6AA2\u67E5\u591A\u7A2E\u53EF\u80FD\u7684\u8A08\u8CBB\u9031\u671F\u5B57\u6BB5\u540D\u7A31\r\n    const billingCycle = data.billing_cycle || data.billingCycle\r\n\r\n    console.log('Billing cycle check:', billingCycle, 'Valid values:', ['monthly', 'yearly'].includes(billingCycle))\r\n\r\n    if (!billingCycle || !['monthly', 'yearly'].includes(billingCycle)) {\r\n        errors.push('\u8A08\u8CBB\u9031\u671F\u5FC5\u9808\u662F monthly \u6216 yearly')\r\n    }\r\n\r\n    if (data.status && !['active', 'paused', 'cancelled'].includes(data.status)) {\r\n        errors.push('\u72C0\u614B\u5FC5\u9808\u662F active\u3001paused \u6216 cancelled')\r\n    }\r\n\r\n    console.log('Validation errors:', errors)\r\n    return errors\r\n}\r\n\r\n// D1 \u6578\u64DA\u5EAB\u670D\u52D9\u985E\r\nclass SubscriptionService {\r\n    private db: D1Database\r\n\r\n    constructor(db: D1Database) {\r\n        this.db = db\r\n    }\r\n\r\n    async getAll(): Promise<Subscription[]> {\r\n        try {\r\n            const result = await this.db.prepare(`\r\n                SELECT * FROM subscriptions\r\n                ORDER BY next_billing_date ASC\r\n            `).all()\r\n\r\n            // \u78BA\u4FDD\u6C92\u6709 null \u503C\uFF0C\u8F49\u63DB\u70BA\u7A7A\u5B57\u7B26\u4E32\r\n            return result.results.map((item: any) => ({\r\n                id: item.id,\r\n                name: item.name || '',\r\n                description: item.description || '',\r\n                price: item.price || 0,\r\n                currency: item.currency || 'TWD',\r\n                billing_cycle: item.billing_cycle || 'monthly',\r\n                next_billing_date: item.next_billing_date || '',\r\n                status: item.status || 'active',\r\n                category: item.category || '',\r\n                website: item.website || '',\r\n                created_at: item.created_at || new Date().toISOString(),\r\n                updated_at: item.updated_at || new Date().toISOString()\r\n            })) as Subscription[]\r\n        } catch (error) {\r\n            console.error('\u7372\u53D6\u8A02\u95B1\u5217\u8868\u5931\u6557:', error)\r\n            throw new Error('\u7372\u53D6\u8A02\u95B1\u5217\u8868\u5931\u6557')\r\n        }\r\n    }\r\n\r\n    async getById(id: number): Promise<Subscription | null> {\r\n        try {\r\n            const result = await this.db.prepare(`\r\n                SELECT * FROM subscriptions WHERE id = ?\r\n            `).bind(id).first()\r\n\r\n            if (!result) {\r\n                return null\r\n            }\r\n\r\n            // \u78BA\u4FDD\u6C92\u6709 null \u503C\uFF0C\u8F49\u63DB\u70BA\u7A7A\u5B57\u7B26\u4E32\r\n            return {\r\n                id: result.id,\r\n                name: result.name || '',\r\n                description: result.description || '',\r\n                price: result.price || 0,\r\n                currency: result.currency || 'TWD',\r\n                billing_cycle: result.billing_cycle || 'monthly',\r\n                next_billing_date: result.next_billing_date || '',\r\n                status: result.status || 'active',\r\n                category: result.category || '',\r\n                website: result.website || '',\r\n                created_at: result.created_at || new Date().toISOString(),\r\n                updated_at: result.updated_at || new Date().toISOString()\r\n            } as Subscription\r\n        } catch (error) {\r\n            console.error('\u7372\u53D6\u8A02\u95B1\u5931\u6557:', error)\r\n            throw new Error('\u7372\u53D6\u8A02\u95B1\u5931\u6557')\r\n        }\r\n    }\r\n\r\n    async create(data: CreateSubscriptionRequest): Promise<Subscription> {\r\n        try {\r\n            console.log('=== Create Subscription Debug ===')\r\n            console.log('Input data:', JSON.stringify(data, null, 2))\r\n\r\n            const now = new Date().toISOString()\r\n\r\n            // \u8655\u7406\u591A\u7A2E\u53EF\u80FD\u7684\u65E5\u671F\u5B57\u6BB5\u540D\u7A31\r\n            const nextBillingDate = data.next_billing_date || (data as any).nextBilling || (data as any).next_billing || (data as any).renewalDate || (data as any).renewal_date\r\n\r\n            // \u8655\u7406\u8A08\u8CBB\u9031\u671F\u5B57\u6BB5\u540D\u7A31\r\n            const billingCycle = data.billing_cycle || (data as any).billingCycle\r\n\r\n            console.log('Processed nextBillingDate:', nextBillingDate)\r\n            console.log('Processed billingCycle:', billingCycle)\r\n\r\n            // \u8655\u7406\u65E5\u671F\u683C\u5F0F\uFF0C\u78BA\u4FDD\u662F YYYY-MM-DD \u683C\u5F0F\r\n            let formattedDate = nextBillingDate\r\n            if (nextBillingDate && nextBillingDate.includes('T')) {\r\n                formattedDate = nextBillingDate.split('T')[0]\r\n            }\r\n\r\n            console.log('Formatted date:', formattedDate)\r\n\r\n            console.log('About to insert with values:', {\r\n                name: data.name,\r\n                description: data.description || null,\r\n                price: data.price,\r\n                currency: data.currency,\r\n                billingCycle,\r\n                formattedDate,\r\n                status: data.status || 'active',\r\n                category: data.category || null,\r\n                website: data.website || null,\r\n                now\r\n            })\r\n\r\n            const result = await this.db.prepare(`\r\n                INSERT INTO subscriptions (\r\n                    name, description, price, currency, billing_cycle,\r\n                    next_billing_date, status, category, website,\r\n                    created_at, updated_at\r\n                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n            `).bind(\r\n                data.name,\r\n                data.description || null,\r\n                data.price,\r\n                data.currency,\r\n                billingCycle,\r\n                formattedDate,\r\n                data.status || 'active',\r\n                data.category || null,\r\n                data.website || null,\r\n                now,\r\n                now\r\n            ).run()\r\n\r\n            console.log('Insert result:', result)\r\n            console.log('Insert meta:', result.meta)\r\n            console.log('Last row ID:', result.meta?.last_row_id)\r\n\r\n            if (!result.success) {\r\n                console.error('Insert failed:', result)\r\n                throw new Error('\u5275\u5EFA\u8A02\u95B1\u5931\u6557')\r\n            }\r\n\r\n            // \u6AA2\u67E5 last_row_id \u662F\u5426\u5B58\u5728\r\n            let lastRowId = result.meta?.last_row_id\r\n\r\n            if (!lastRowId || lastRowId <= 0) {\r\n                console.warn('Invalid last_row_id:', lastRowId, 'trying to get latest record')\r\n\r\n                // \u5099\u7528\u65B9\u6848\uFF1A\u67E5\u8A62\u6700\u65B0\u7684\u8A18\u9304\r\n                const latestResult = await this.db.prepare(`\r\n                    SELECT id FROM subscriptions\r\n                    WHERE name = ? AND created_at = ?\r\n                    ORDER BY id DESC LIMIT 1\r\n                `).bind(data.name, now).first()\r\n\r\n                if (latestResult && latestResult.id) {\r\n                    lastRowId = latestResult.id as number\r\n                    console.log('Found latest record ID:', lastRowId)\r\n                } else {\r\n                    console.error('Cannot find created record')\r\n                    throw new Error('\u5275\u5EFA\u8A02\u95B1\u5931\u6557\uFF1A\u7121\u6CD5\u7372\u53D6\u6709\u6548\u7684\u8A02\u95B1 ID')\r\n                }\r\n            }\r\n\r\n            const subscription = await this.getById(lastRowId)\r\n            if (!subscription) {\r\n                throw new Error('\u5275\u5EFA\u5F8C\u7121\u6CD5\u7372\u53D6\u8A02\u95B1')\r\n            }\r\n\r\n            console.log('Created subscription:', subscription)\r\n            return subscription\r\n        } catch (error) {\r\n            console.error('\u5275\u5EFA\u8A02\u95B1\u5931\u6557:', error)\r\n            throw new Error('\u5275\u5EFA\u8A02\u95B1\u5931\u6557')\r\n        }\r\n    }\r\n\r\n    async update(id: number, data: UpdateSubscriptionRequest): Promise<Subscription | null> {\r\n        try {\r\n            const existing = await this.getById(id)\r\n            if (!existing) {\r\n                return null\r\n            }\r\n\r\n            const now = new Date().toISOString()\r\n\r\n            // \u69CB\u5EFA\u52D5\u614B\u66F4\u65B0\u8A9E\u53E5\r\n            const updateFields: string[] = []\r\n            const values: any[] = []\r\n\r\n            if (data.name !== undefined) {\r\n                updateFields.push('name = ?')\r\n                values.push(data.name)\r\n            }\r\n            if (data.description !== undefined) {\r\n                updateFields.push('description = ?')\r\n                values.push(data.description)\r\n            }\r\n            if (data.price !== undefined) {\r\n                updateFields.push('price = ?')\r\n                values.push(data.price)\r\n            }\r\n            if (data.currency !== undefined) {\r\n                updateFields.push('currency = ?')\r\n                values.push(data.currency)\r\n            }\r\n            // \u8655\u7406\u8A08\u8CBB\u9031\u671F\u5B57\u6BB5\u540D\u7A31\r\n            const billingCycle = data.billing_cycle || (data as any).billingCycle\r\n            if (billingCycle !== undefined) {\r\n                updateFields.push('billing_cycle = ?')\r\n                values.push(billingCycle)\r\n            }\r\n\r\n            // \u8655\u7406\u65E5\u671F\u5B57\u6BB5\u540D\u7A31\r\n            const nextBillingDate = data.next_billing_date || (data as any).nextBilling || (data as any).next_billing || (data as any).renewalDate || (data as any).renewal_date\r\n            if (nextBillingDate !== undefined) {\r\n                // \u8655\u7406\u65E5\u671F\u683C\u5F0F\uFF0C\u78BA\u4FDD\u662F YYYY-MM-DD \u683C\u5F0F\r\n                let formattedDate = nextBillingDate\r\n                if (nextBillingDate && nextBillingDate.includes('T')) {\r\n                    formattedDate = nextBillingDate.split('T')[0]\r\n                }\r\n                updateFields.push('next_billing_date = ?')\r\n                values.push(formattedDate)\r\n            }\r\n            if (data.status !== undefined) {\r\n                updateFields.push('status = ?')\r\n                values.push(data.status)\r\n            }\r\n            if (data.category !== undefined) {\r\n                updateFields.push('category = ?')\r\n                values.push(data.category)\r\n            }\r\n            if (data.website !== undefined) {\r\n                updateFields.push('website = ?')\r\n                values.push(data.website)\r\n            }\r\n\r\n            updateFields.push('updated_at = ?')\r\n            values.push(now)\r\n            values.push(id)\r\n\r\n            const result = await this.db.prepare(`\r\n                UPDATE subscriptions\r\n                SET ${updateFields.join(', ')}\r\n                WHERE id = ?\r\n            `).bind(...values).run()\r\n\r\n            if (!result.success) {\r\n                throw new Error('\u66F4\u65B0\u8A02\u95B1\u5931\u6557')\r\n            }\r\n\r\n            return await this.getById(id)\r\n        } catch (error) {\r\n            console.error('\u66F4\u65B0\u8A02\u95B1\u5931\u6557:', error)\r\n            throw new Error('\u66F4\u65B0\u8A02\u95B1\u5931\u6557')\r\n        }\r\n    }\r\n\r\n    async delete(id: number): Promise<boolean> {\r\n        try {\r\n            const existing = await this.getById(id)\r\n            if (!existing) {\r\n                return false\r\n            }\r\n\r\n            const result = await this.db.prepare(`\r\n                DELETE FROM subscriptions WHERE id = ?\r\n            `).bind(id).run()\r\n\r\n            return result.success\r\n        } catch (error) {\r\n            console.error('\u522A\u9664\u8A02\u95B1\u5931\u6557:', error)\r\n            throw new Error('\u522A\u9664\u8A02\u95B1\u5931\u6557')\r\n        }\r\n    }\r\n}\r\n\r\n// \u6839\u8DEF\u5F91\u7AEF\u9EDE\r\napp.get('/', (c) => {\r\n    return c.json({\r\n        message: 'Subscription Backend API',\r\n        version: '1.0.0',\r\n        endpoints: {\r\n            health: '/api/health',\r\n            subscriptions: '/api/subscriptions',\r\n            subscription: '/api/subscriptions/:id'\r\n        }\r\n    })\r\n})\r\n\r\n// \u5065\u5EB7\u6AA2\u67E5\u7AEF\u9EDE\r\napp.get('/api/health', (c) => {\r\n    return c.json({\r\n        success: true,\r\n        data: { ok: true, timestamp: new Date().toISOString() },\r\n        message: '\u670D\u52D9\u904B\u884C\u6B63\u5E38'\r\n    } as ApiResponse)\r\n})\r\n\r\n// \u6578\u64DA\u5EAB\u521D\u59CB\u5316\u7AEF\u9EDE\r\napp.post('/api/init-db', async (c) => {\r\n    try {\r\n        const db = c.env.DB\r\n\r\n        // \u57F7\u884C\u6578\u64DA\u5EAB\u521D\u59CB\u5316\u8173\u672C - \u4F7F\u7528\u55AE\u884C SQL \u8A9E\u53E5\r\n        const createTableSQL = `CREATE TABLE IF NOT EXISTS subscriptions (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL, description TEXT, price REAL NOT NULL, currency TEXT NOT NULL, billing_cycle TEXT NOT NULL CHECK (billing_cycle IN ('monthly','yearly')), next_billing_date TEXT NOT NULL, status TEXT NOT NULL DEFAULT 'active', category TEXT, website TEXT, created_at TEXT NOT NULL DEFAULT (strftime('%Y-%m-%dT%H:%M:%SZ','now')), updated_at TEXT NOT NULL DEFAULT (strftime('%Y-%m-%dT%H:%M:%SZ','now')))`\r\n\r\n        const createIndex1SQL = `CREATE INDEX IF NOT EXISTS idx_subs_next_billing ON subscriptions (next_billing_date)`\r\n        const createIndex2SQL = `CREATE INDEX IF NOT EXISTS idx_subs_status ON subscriptions (status)`\r\n\r\n        // \u5206\u6B65\u57F7\u884C SQL \u8A9E\u53E5\r\n        await db.exec(createTableSQL)\r\n        await db.exec(createIndex1SQL)\r\n        await db.exec(createIndex2SQL)\r\n\r\n        return c.json({\r\n            success: true,\r\n            data: {\r\n                executed: true,\r\n                message: '\u6578\u64DA\u5EAB\u8868\u7D50\u69CB\u5DF2\u5275\u5EFA'\r\n            },\r\n            message: '\u6578\u64DA\u5EAB\u521D\u59CB\u5316\u6210\u529F'\r\n        } as ApiResponse)\r\n    } catch (error) {\r\n        return c.json({\r\n            success: false,\r\n            error: error instanceof Error ? error.message : '\u6578\u64DA\u5EAB\u521D\u59CB\u5316\u5931\u6557',\r\n            message: '\u6578\u64DA\u5EAB\u521D\u59CB\u5316\u5931\u6557'\r\n        } as ApiResponse, 500)\r\n    }\r\n})\r\n\r\n// \u8A02\u95B1\u7BA1\u7406 API \u8DEF\u7531\r\n\r\n// \u8655\u7406 OPTIONS \u9810\u6AA2\u8ACB\u6C42\r\napp.options('*', (c) => {\r\n    return c.text('', 200)\r\n})\r\n\r\n// \u7372\u53D6\u6240\u6709\u8A02\u95B1\r\napp.get('/api/subscriptions', async (c) => {\r\n    try {\r\n        console.log('=== GET /api/subscriptions \u958B\u59CB ===')\r\n\r\n        const service = new SubscriptionService(c.env.DB)\r\n        console.log('\u958B\u59CB\u7372\u53D6\u8A02\u95B1\u5217\u8868...')\r\n        const subscriptions = await service.getAll()\r\n        console.log('\u7372\u53D6\u5230\u7684\u8A02\u95B1\u6578\u91CF:', subscriptions.length)\r\n        console.log('\u8A02\u95B1\u5217\u8868:', JSON.stringify(subscriptions, null, 2))\r\n\r\n        const response = {\r\n            success: true,\r\n            data: subscriptions,\r\n            message: '\u7372\u53D6\u8A02\u95B1\u5217\u8868\u6210\u529F'\r\n        } as ApiResponse\r\n\r\n        console.log('\u8FD4\u56DE\u97FF\u61C9:', JSON.stringify(response, null, 2))\r\n        console.log('=== GET /api/subscriptions \u7D50\u675F ===')\r\n\r\n        return c.json(response)\r\n    } catch (error) {\r\n        console.error('=== GET /api/subscriptions \u932F\u8AA4 ===')\r\n        console.error('Error:', error)\r\n        console.error('Error message:', error instanceof Error ? error.message : 'Unknown error')\r\n        console.error('Error stack:', error instanceof Error ? error.stack : 'No stack')\r\n\r\n        const errorResponse = {\r\n            success: false,\r\n            error: error instanceof Error ? error.message : '\u7372\u53D6\u8A02\u95B1\u5217\u8868\u5931\u6557',\r\n            message: '\u7372\u53D6\u8A02\u95B1\u5217\u8868\u5931\u6557'\r\n        } as ApiResponse\r\n\r\n        console.log('\u8FD4\u56DE\u932F\u8AA4\u97FF\u61C9:', JSON.stringify(errorResponse, null, 2))\r\n        console.log('=== GET /api/subscriptions \u932F\u8AA4\u7D50\u675F ===')\r\n\r\n        return c.json(errorResponse, 500)\r\n    }\r\n})\r\n\r\n// \u7372\u53D6\u55AE\u500B\u8A02\u95B1\r\napp.get('/api/subscriptions/:id', async (c) => {\r\n    try {\r\n        const id = parseInt(c.req.param('id'))\r\n        if (isNaN(id)) {\r\n            return c.json({\r\n                success: false,\r\n                error: '\u7121\u6548\u7684\u8A02\u95B1ID',\r\n                message: '\u8A02\u95B1ID\u5FC5\u9808\u662F\u6578\u5B57'\r\n            } as ApiResponse, 400)\r\n        }\r\n\r\n        const service = new SubscriptionService(c.env.DB)\r\n        const subscription = await service.getById(id)\r\n\r\n        if (!subscription) {\r\n            return c.json({\r\n                success: false,\r\n                error: '\u8A02\u95B1\u4E0D\u5B58\u5728',\r\n                message: '\u627E\u4E0D\u5230\u6307\u5B9A\u7684\u8A02\u95B1'\r\n            } as ApiResponse, 404)\r\n        }\r\n\r\n        return c.json({\r\n            success: true,\r\n            data: subscription,\r\n            message: '\u7372\u53D6\u8A02\u95B1\u6210\u529F'\r\n        } as ApiResponse)\r\n    } catch (error) {\r\n        return c.json({\r\n            success: false,\r\n            error: error instanceof Error ? error.message : '\u7372\u53D6\u8A02\u95B1\u5931\u6557',\r\n            message: '\u7372\u53D6\u8A02\u95B1\u5931\u6557'\r\n        } as ApiResponse, 500)\r\n    }\r\n})\r\n\r\n// \u5275\u5EFA\u65B0\u8A02\u95B1\r\napp.post('/api/subscriptions', async (c) => {\r\n    try {\r\n        console.log('=== POST /api/subscriptions \u958B\u59CB ===')\r\n        console.log('Request headers:', c.req.header())\r\n\r\n        const body = await c.req.json()\r\n        console.log('Received request body:', JSON.stringify(body, null, 2))\r\n\r\n        // \u6578\u64DA\u9A57\u8B49\r\n        const validationErrors = validateSubscription(body)\r\n        console.log('Validation errors:', validationErrors)\r\n\r\n        if (validationErrors.length > 0) {\r\n            console.log('\u8FD4\u56DE\u9A57\u8B49\u932F\u8AA4\u97FF\u61C9')\r\n            return c.json({\r\n                success: false,\r\n                error: validationErrors.join(', '),\r\n                message: '\u6578\u64DA\u9A57\u8B49\u5931\u6557'\r\n            } as ApiResponse, 400)\r\n        }\r\n\r\n        console.log('\u958B\u59CB\u5275\u5EFA\u8A02\u95B1...')\r\n        const service = new SubscriptionService(c.env.DB)\r\n        const subscription = await service.create(body as CreateSubscriptionRequest)\r\n        console.log('\u8A02\u95B1\u5275\u5EFA\u6210\u529F:', subscription)\r\n\r\n        const response = {\r\n            success: true,\r\n            data: subscription,\r\n            message: '\u5275\u5EFA\u8A02\u95B1\u6210\u529F'\r\n        } as ApiResponse\r\n\r\n        console.log('\u8FD4\u56DE\u6210\u529F\u97FF\u61C9:', JSON.stringify(response, null, 2))\r\n        console.log('=== POST /api/subscriptions \u7D50\u675F ===')\r\n\r\n        return c.json(response, 201)\r\n    } catch (error) {\r\n        console.error('=== POST /api/subscriptions \u932F\u8AA4 ===')\r\n        console.error('Error:', error)\r\n        console.error('Error message:', error instanceof Error ? error.message : 'Unknown error')\r\n        console.error('Error stack:', error instanceof Error ? error.stack : 'No stack')\r\n\r\n        const errorResponse = {\r\n            success: false,\r\n            error: error instanceof Error ? error.message : '\u5275\u5EFA\u8A02\u95B1\u5931\u6557',\r\n            message: '\u5275\u5EFA\u8A02\u95B1\u5931\u6557'\r\n        } as ApiResponse\r\n\r\n        console.log('\u8FD4\u56DE\u932F\u8AA4\u97FF\u61C9:', JSON.stringify(errorResponse, null, 2))\r\n        console.log('=== POST /api/subscriptions \u932F\u8AA4\u7D50\u675F ===')\r\n\r\n        return c.json(errorResponse, 500)\r\n    }\r\n})\r\n\r\n// \u66F4\u65B0\u8A02\u95B1\r\napp.put('/api/subscriptions/:id', async (c) => {\r\n    try {\r\n        const id = parseInt(c.req.param('id'))\r\n        if (isNaN(id)) {\r\n            return c.json({\r\n                success: false,\r\n                error: '\u7121\u6548\u7684\u8A02\u95B1ID',\r\n                message: '\u8A02\u95B1ID\u5FC5\u9808\u662F\u6578\u5B57'\r\n            } as ApiResponse, 400)\r\n        }\r\n\r\n        const body = await c.req.json()\r\n\r\n        // \u6578\u64DA\u9A57\u8B49\uFF08\u90E8\u5206\u66F4\u65B0\uFF0C\u6240\u4EE5\u53EA\u9A57\u8B49\u63D0\u4F9B\u7684\u5B57\u6BB5\uFF09\r\n        const validationErrors = validateSubscription({ ...body, name: body.name || 'temp' })\r\n        if (body.name && validationErrors.some(err => err.includes('\u8A02\u95B1\u540D\u7A31'))) {\r\n            return c.json({\r\n                success: false,\r\n                error: '\u8A02\u95B1\u540D\u7A31\u4E0D\u80FD\u70BA\u7A7A',\r\n                message: '\u6578\u64DA\u9A57\u8B49\u5931\u6557'\r\n            } as ApiResponse, 400)\r\n        }\r\n\r\n        const service = new SubscriptionService(c.env.DB)\r\n        const subscription = await service.update(id, body as UpdateSubscriptionRequest)\r\n\r\n        if (!subscription) {\r\n            return c.json({\r\n                success: false,\r\n                error: '\u8A02\u95B1\u4E0D\u5B58\u5728',\r\n                message: '\u627E\u4E0D\u5230\u6307\u5B9A\u7684\u8A02\u95B1'\r\n            } as ApiResponse, 404)\r\n        }\r\n\r\n        return c.json({\r\n            success: true,\r\n            data: subscription,\r\n            message: '\u66F4\u65B0\u8A02\u95B1\u6210\u529F'\r\n        } as ApiResponse)\r\n    } catch (error) {\r\n        return c.json({\r\n            success: false,\r\n            error: error instanceof Error ? error.message : '\u66F4\u65B0\u8A02\u95B1\u5931\u6557',\r\n            message: '\u66F4\u65B0\u8A02\u95B1\u5931\u6557'\r\n        } as ApiResponse, 500)\r\n    }\r\n})\r\n\r\n// \u522A\u9664\u8A02\u95B1\r\napp.delete('/api/subscriptions/:id', async (c) => {\r\n    try {\r\n        const id = parseInt(c.req.param('id'))\r\n        if (isNaN(id)) {\r\n            return c.json({\r\n                success: false,\r\n                error: '\u7121\u6548\u7684\u8A02\u95B1ID',\r\n                message: '\u8A02\u95B1ID\u5FC5\u9808\u662F\u6578\u5B57'\r\n            } as ApiResponse, 400)\r\n        }\r\n\r\n        const service = new SubscriptionService(c.env.DB)\r\n        const deleted = await service.delete(id)\r\n\r\n        if (!deleted) {\r\n            return c.json({\r\n                success: false,\r\n                error: '\u8A02\u95B1\u4E0D\u5B58\u5728',\r\n                message: '\u627E\u4E0D\u5230\u6307\u5B9A\u7684\u8A02\u95B1'\r\n            } as ApiResponse, 404)\r\n        }\r\n\r\n        return c.json({\r\n            success: true,\r\n            data: { id },\r\n            message: '\u522A\u9664\u8A02\u95B1\u6210\u529F'\r\n        } as ApiResponse)\r\n    } catch (error) {\r\n        return c.json({\r\n            success: false,\r\n            error: error instanceof Error ? error.message : '\u522A\u9664\u8A02\u95B1\u5931\u6557',\r\n            message: '\u522A\u9664\u8A02\u95B1\u5931\u6557'\r\n        } as ApiResponse, 500)\r\n    }\r\n})\r\n\r\nexport default app", "import type { Middleware } from \"./common\";\r\n\r\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\r\n\ttry {\r\n\t\treturn await middlewareCtx.next(request, env);\r\n\t} finally {\r\n\t\ttry {\r\n\t\t\tif (request.body !== null && !request.bodyUsed) {\r\n\t\t\t\tconst reader = request.body.getReader();\r\n\t\t\t\twhile (!(await reader.read()).done) {}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default drainBody;\r\n", "import type { Middleware } from \"./common\";\r\n\r\ninterface JsonError {\r\n\tmessage?: string;\r\n\tname?: string;\r\n\tstack?: string;\r\n\tcause?: JsonError;\r\n}\r\n\r\nfunction reduceError(e: any): JsonError {\r\n\treturn {\r\n\t\tname: e?.name,\r\n\t\tmessage: e?.message ?? String(e),\r\n\t\tstack: e?.stack,\r\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\r\n\t};\r\n}\r\n\r\n// See comment in `bundle.ts` for details on why this is needed\r\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\r\n\ttry {\r\n\t\treturn await middlewareCtx.next(request, env);\r\n\t} catch (e: any) {\r\n\t\tconst error = reduceError(e);\r\n\t\treturn Response.json(error, {\r\n\t\t\tstatus: 500,\r\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default jsonError;\r\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\andy9\\\\WebstormProjects\\\\substracker\\\\backend\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\andy9\\\\WebstormProjects\\\\substracker\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\andy9\\\\WebstormProjects\\\\substracker\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\andy9\\\\WebstormProjects\\\\substracker\\\\backend\\\\src\\\\index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\r\n// TODO: allow dispatching more events?\r\nexport type Dispatcher = (\r\n\ttype: \"scheduled\",\r\n\tinit: { cron?: string }\r\n) => Awaitable<void>;\r\n\r\nexport type IncomingRequest = Request<\r\n\tunknown,\r\n\tIncomingRequestCfProperties<unknown>\r\n>;\r\n\r\nexport interface MiddlewareContext {\r\n\tdispatch: Dispatcher;\r\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\r\n}\r\n\r\nexport type Middleware = (\r\n\trequest: IncomingRequest,\r\n\tenv: any,\r\n\tctx: ExecutionContext,\r\n\tmiddlewareCtx: MiddlewareContext\r\n) => Awaitable<Response>;\r\n\r\nconst __facade_middleware__: Middleware[] = [];\r\n\r\n// The register functions allow for the insertion of one or many middleware,\r\n// We register internal middleware first in the stack, but have no way of controlling\r\n// the order that addMiddleware is run in service workers so need an internal function.\r\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\r\n\t__facade_middleware__.push(...args.flat());\r\n}\r\nexport function __facade_registerInternal__(\r\n\t...args: (Middleware | Middleware[])[]\r\n) {\r\n\t__facade_middleware__.unshift(...args.flat());\r\n}\r\n\r\nfunction __facade_invokeChain__(\r\n\trequest: IncomingRequest,\r\n\tenv: any,\r\n\tctx: ExecutionContext,\r\n\tdispatch: Dispatcher,\r\n\tmiddlewareChain: Middleware[]\r\n): Awaitable<Response> {\r\n\tconst [head, ...tail] = middlewareChain;\r\n\tconst middlewareCtx: MiddlewareContext = {\r\n\t\tdispatch,\r\n\t\tnext(newRequest, newEnv) {\r\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\r\n\t\t},\r\n\t};\r\n\treturn head(request, env, ctx, middlewareCtx);\r\n}\r\n\r\nexport function __facade_invoke__(\r\n\trequest: IncomingRequest,\r\n\tenv: any,\r\n\tctx: ExecutionContext,\r\n\tdispatch: Dispatcher,\r\n\tfinalMiddleware: Middleware\r\n): Awaitable<Response> {\r\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\r\n\t\t...__facade_middleware__,\r\n\t\tfinalMiddleware,\r\n\t]);\r\n}\r\n", "// This loads all middlewares exposed on the middleware object and then starts\r\n// the invocation chain. The big idea is that we can add these to the middleware\r\n// export dynamically through wrangler, or we can potentially let users directly\r\n// add them as a sort of \"plugin\" system.\r\n\r\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\andy9\\\\WebstormProjects\\\\substracker\\\\backend\\\\.wrangler\\\\tmp\\\\bundle-dklZXK\\\\middleware-insertion-facade.js\";\r\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\andy9\\\\WebstormProjects\\\\substracker\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\r\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\andy9\\\\WebstormProjects\\\\substracker\\\\backend\\\\.wrangler\\\\tmp\\\\bundle-dklZXK\\\\middleware-insertion-facade.js\";\r\n\r\n// Preserve all the exports from the worker\r\nexport * from \"C:\\\\Users\\\\andy9\\\\WebstormProjects\\\\substracker\\\\backend\\\\.wrangler\\\\tmp\\\\bundle-dklZXK\\\\middleware-insertion-facade.js\";\r\n\r\nclass __Facade_ScheduledController__ implements ScheduledController {\r\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\r\n\r\n\tconstructor(\r\n\t\treadonly scheduledTime: number,\r\n\t\treadonly cron: string,\r\n\t\tnoRetry: ScheduledController[\"noRetry\"]\r\n\t) {\r\n\t\tthis.#noRetry = noRetry;\r\n\t}\r\n\r\n\tnoRetry() {\r\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\r\n\t\t\tthrow new TypeError(\"Illegal invocation\");\r\n\t\t}\r\n\t\t// Need to call native method immediately in case uncaught error thrown\r\n\t\tthis.#noRetry();\r\n\t}\r\n}\r\n\r\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\r\n\t// If we don't have any middleware defined, just return the handler as is\r\n\tif (\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\r\n\t) {\r\n\t\treturn worker;\r\n\t}\r\n\t// Otherwise, register all middleware once\r\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\r\n\t\t__facade_register__(middleware);\r\n\t}\r\n\r\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\r\n\t\trequest,\r\n\t\tenv,\r\n\t\tctx\r\n\t) {\r\n\t\tif (worker.fetch === undefined) {\r\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\r\n\t\t}\r\n\t\treturn worker.fetch(request, env, ctx);\r\n\t};\r\n\r\n\treturn {\r\n\t\t...worker,\r\n\t\tfetch(request, env, ctx) {\r\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\r\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\r\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\r\n\t\t\t\t\t\tDate.now(),\r\n\t\t\t\t\t\tinit.cron ?? \"\",\r\n\t\t\t\t\t\t() => {}\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction wrapWorkerEntrypoint(\r\n\tklass: WorkerEntrypointConstructor\r\n): WorkerEntrypointConstructor {\r\n\t// If we don't have any middleware defined, just return the handler as is\r\n\tif (\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\r\n\t) {\r\n\t\treturn klass;\r\n\t}\r\n\t// Otherwise, register all middleware once\r\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\r\n\t\t__facade_register__(middleware);\r\n\t}\r\n\r\n\t// `extend`ing `klass` here so other RPC methods remain callable\r\n\treturn class extends klass {\r\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\r\n\t\t\trequest,\r\n\t\t\tenv,\r\n\t\t\tctx\r\n\t\t) => {\r\n\t\t\tthis.env = env;\r\n\t\t\tthis.ctx = ctx;\r\n\t\t\tif (super.fetch === undefined) {\r\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\r\n\t\t\t}\r\n\t\t\treturn super.fetch(request);\r\n\t\t};\r\n\r\n\t\t#dispatcher: Dispatcher = (type, init) => {\r\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\r\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\r\n\t\t\t\t\tDate.now(),\r\n\t\t\t\t\tinit.cron ?? \"\",\r\n\t\t\t\t\t() => {}\r\n\t\t\t\t);\r\n\t\t\t\treturn super.scheduled(controller);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\r\n\t\t\treturn __facade_invoke__(\r\n\t\t\t\trequest,\r\n\t\t\t\tthis.env,\r\n\t\t\t\tthis.ctx,\r\n\t\t\t\tthis.#dispatcher,\r\n\t\t\t\tthis.#fetchDispatcher\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\r\nif (typeof ENTRY === \"object\") {\r\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\r\n} else if (typeof ENTRY === \"function\") {\r\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\r\n}\r\nexport default WRAPPED_ENTRY;\r\n"],
  "mappings": "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",
  "names": ["raw", "app", "Node", "Node", "Hono", "Hono"]
}
